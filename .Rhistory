library(tidyverse)
c(3, 4, 5, 6, 77.)
summary()
numbers <- c(3, 4, 5, 6, 77)
numbers %>%
mean()
numbers <- c(3, 4, 5, 6, 77)
numbers %>%
summary()
my_packages <- c("usethis", "devtools", "learnr", "tinytex")
my_packages <- c("usethis", "devtools", "learnr", "tinytex")
install.packages(my_packages, repos = "http://cran.rstudio.com")
remotes::install_github("kosukeimai/qss-package", build_vignettes = TRUE)
install.packages('tinytex')
tinytex::install_tinytex() # install TinyTeX
turnout <- read.csv("destktop/turnout.csv")
remotes::install_github("kosukeimai/qss-package", build_vignettes = TRUE)
force = TRUE
learnr::run_tutorial("00-intro", package = "qsslearnr")
learnr::run_tutorial("01-causality", package = "qsslearnr")
> learnr::run_tutorial("01-causality1", package = "qsslearnr")
learnr::run_tutorial("01-causality", package = "qsslearnr")
learnr::run_tutorial("01-causality1", package = "qsslearnr")
learnr::run_tutorial("01-causality1", package = "qsslearnr")
install.packages("rmarkdown")
brew install pandoc
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
install.packages("reticulate") and library(reticulate)
install.packages("reticulate")
library(reticulate)
library(readr)
turnout <- read_csv("Desktop/data/turnout.csv")
View(turnout)
View(turnout)
library(readr)
transphobia <- read_csv("Desktop/data/transphobia.csv")
View(transphobia)
head(dat)
dat <- transphobia
head(dat)
dim(dat)
summary(dat)
table(dat$treat_ind)
prop.table(table(dat$treat_ind))
round(100 * prop.table(table(dat$treat_ind)), digits=1)
round(100 * prop.table(table(dat$treat_ind)), digits=0)
learnr::run_tutorial(package = "qsslearnr")
learnr::run_tutorial("02-causality2", package = "qsslearnr")
library(readr)
boston <- read_csv("Desktop/data/boston.csv")
View(boston)
library(readr)
dat <- read_csv("Desktop/data/boston.csv")
View(dat)
View(dat)
library(readr)
boston <- read_csv("Desktop/data/boston.csv")
View(boston)
dim(boston)
library(readr)
newspapers <- read_csv("Desktop/data/newspapers.csv")
View(newspapers)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
dat <- read.csv("Desktop/data/newspapers.csv")
View(dat)
View(newspapers)
library(readr)
newspapers <- read.csv("Desktop/data/newspapers.csv")
View(newspapers)
```{r}
View(newspapers)
knitr::opts_chunk$set(echo = TRUE)
summary(newspapers)
treated <- subset(newspapers, subset = to_labour == 1)
control <- subset(newspapers, subset = to_labour == 0)
ate <- mean(treated$vote_lab_97) - mean(control$vote_lab_97)
ate
mean(treated$male)
mean(control$male)
trt_male <- treated[treated$male == 1,]
ctr_male <- control[control$male == 1,]
mean(trt_male$vote_lab_97) - mean(ctr_male$vote_lab_97)
trt_female <- treated[treated$male == 0,]
ctr_female <- control[control$male == 0,]
mean(trt_female$vote_lab_97) - mean(ctr_female$vote_lab_97)
vote_by_treat <- tapply(dat$vote_lab_97,dat$to_labour,mean)
vote_by_treat <- tapply(newspapers$vote_lab_97,newspapers$to_labour,mean)
vote_by_treat
ate <- vote_by_treat[2] - vote_by_treat[1]
ate
mean(treated$male)
mean(control$male)
trt_male <- treated[treated$male == 1,]
ctr_male <- control[control$male == 1,]
mean(trt_male$vote_lab_97) - mean(ctr_male$vote_lab_97)
mean(treated$male)
mean(control$male)
mean(treated$male)
mean(control$male)
trt_male <- treated[treated$male == 1,]
ctr_male <- control[control$male == 1,]
mean(trt_male$vote_lab_97) - mean(ctr_male$vote_lab_97)
plab_by_treat <- tapply(dat$parent_labour, dat$to_labour,mean)
plab_by_treat <- tapply(newspapers$parent_labour, newspapers$to_labour,mean)
plab_by_treat
trt_by_plab <- tapply(treated$vote_lab_97,treated$parent_labour,mean)
ctr_by_plab <- tapply(control$vote_lab_97,control$parent_labour,mean)
trt_by_plab #average of the outcome for treated, for parents that did and didn't
ctr_by_plab #average of the outcome for control, for parents that did and didn't
ate_by_plab <- trt_by_plab - ctr_by_plab
ate_by_plab #ate among parent not voting for labor much bigger!
treated_diff <- mean(treated$vote_lab_97) - mean(treated$vote_lab_92)
treated_diff
control_diff <- mean(control$vote_lab_97) - mean(control$vote_lab_92)
treated_diff - control_diff
learnr::run_tutorial("00-intro", package = "qsslearnr")
learnr::run_tutorial(package = "qsslearnr")
learnr::run_tutorial("03-measurement1", package = "qsslearnr")
learnr::run_tutorial("00-intro", package = "qsslearnr")
learnr::run_tutorial(package = "qsslearnr")
learnr::run_tutorial("04-measurement2", package = "qsslearnr")
learnr::run_tutorial(package = "qsslearnr")
learnr::run_tutorial("05-prediction1", package = "qsslearnr")
learnr::run_tutorial(package = "qsslearnr")
learnr::run_tutorial("09-uncertainty1", package = "qsslearnr")
plot(x = turnout$CVAP, y = turnout$turnout, pch = 16,
col = "blue")
plot(turnout$CVAP, turnout$turnout, pch = 16,
col = "blue")
cvap <- subset(turnout$cvap)
turnout <- read.csv("blackturnout.csv")
turnout <- na.omit(turnout)
years <- turnout$year
summary(years)
with <- subset(turnout, candidate == 1)
without <- subset(turnout, candidate == 0)
boxplot(turnout$turnout ~ turnout$candidate, xlab = "General Elections With/Without Black Candidates", ylab = "Proportion of Black Population in Voting Districts", names = c("Without", "With"), main = "Black Voter Turnout in Elections Based on Black Candidates")
regression <- lm(turnout ~ candidate, data = turnout)
regression
coef(regression)
summary(turnout$CVAP)
cvap <- subset(turnout$cvap)
summary(turnout$CVAP)
summary(turnout$turnout)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(with$CVAP, with$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Turnout",
xlab = "Proportion of Black Voters in District Population")
points(without$CVAP, without$turnout, pch = 16, col = "blue")
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnoutwith$CVAP, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Turnout",
xlab = "Proportion of Black Voters in District Population")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Turnout",
xlab = "Proportion of Black Voters in District Population")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", inset=c(-0.2, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", inset=c(-0.4, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", inset=c(-0.2, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", inset=c(-0.1, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", inset=c(0, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", inset=c(1, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", "top", legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
par(mar=c(5, 4, 4, 8), xpd=TRUE)
legend("topright", inset=c(-0.2, 0), legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
par(mar=c(5, 4, 4, 8), xpd=TRUE)
legend("topright", legend=c("No Candidate","Candidate"), col=c("red","blue"))
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate, Candidate"), pch = 16, col = c("red", "blue", bty = "n", cex = 0.8)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate, Candidate"), pch = 16, col = c("red", "blue"), bty = "n", cex = 0.8)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate", "Candidate"), pch = 16, col = c("red", "blue"), bty = "n", cex = 0.8)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate", "Candidate"), pch = 16, col = c("red", "blue"), cex = 0.8)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate", "Candidate"), pch = 16, col = c("red", "blue"), cex = 0.7)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate", "Candidate"), pch = 16, col = c("red", "blue"), bty = "n", cex = 0.7)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Population",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate", "Candidate"), pch = 16, col = c("red", "blue"), cex = 0.6)
summary(turnout$CVAP)
summary(turnout$turnout)
plot(without$CVAP, without$turnout, pch = 16,
col = "red",
xlim = c(0.005, 0.700), ylim = c(0.07, 1.0),
ylab = "Black Voter Turnout",
xlab = "Proportion of Black Voters in Overall District Populations",
main = "Average Black Voter Turnout by District Population Proportion")
points(with$CVAP, with$turnout, pch = 16, col = "blue")
legend("topright", legend = c("No Candidate", "Candidate"), pch = 16, col = c("red", "blue"), cex = 0.6)
multi.regression <- lm(turnout ~ candidate + CVAP, data = turnout)
multi.regression
multi.regression <- lm(turnout ~ candidate + CVAP, data = turnout)
multi.regression
multi.regression <- lm(turnout ~ candidate + CVAP, data = turnout)
multi.regression
coef(multi.regression)
prison <- read.csv("https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true")
prison_obs <- nrow(prison)
prison_vars <- ncol(prison)
library(dplyr)
total_average_white_prison_pop <- mean(prison$white_prison_pop, na.rm = TRUE)
total_average_black_prison_pop <- mean(prison$black_prison_pop, na.rm = TRUE)
average_prison_ratios <- prison %>%
group_by(state) %>%
summarize(
black_to_white_ratio = sum(black_prison_pop, na.rm = TRUE) / sum(white_prison_pop, na.rm = TRUE)
)
sorted_ratio_states <- average_prison_ratios %>%
arrange(desc(black_to_white_ratio)) %>%
head(10)
# filtering the top ratio state
highest_ratio_state <- head(sorted_ratio_states, 1)
# state with the highest Black to White population ratio
highest_state <- highest_ratio_state$state
# highest average Black to White population ratio
highest_ratio <- highest_ratio_state$black_to_white_ratio
View(sorted_ratio_states)
source("~/Desktop/INFO/info201/code/assignment-04-mehasingal/chart1_example.R")
source("~/Desktop/INFO/info201/code/assignment-04-mehasingal/chart2_example.R")
source("~/Desktop/INFO/info201/code/assignment-04-mehasingal/map_example.R")
ggplot(merged_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = black_to_white_ratio),
color = "white", # show state outlines
linewidth = .1        # thinly stroked
) +
coord_map() + # use a map-based coordinate system
scale_fill_continuous(low = "#132B43", high = "Red") +
labs(title = "Geographical Distribution of Black to White Prison Population Ratios", fill = "Black to White Ratio") +
blank_theme # variable containing map styles (defined in next code snippet)
print(final_map)
final_map <- ggplot(merged_data) +
geom_polygon(
mapping = aes(x = long, y = lat, group = group, fill = black_to_white_ratio),
color = "white", # show state outlines
linewidth = .1        # thinly stroked
) +
coord_map() + # use a map-based coordinate system
scale_fill_continuous(low = "#132B43", high = "Red") +
labs(title = "Geographical Distribution of Black to White Prison Population Ratios", fill = "Black to White Ratio") +
blank_theme # variable containing map styles (defined in next code snippet)
print(final_map)
chart_2 <- ggplot(filtered_average_data, aes(x = average_prison_pop, y = black_to_white_ratio)) +
geom_point() +
labs(title = "Correlation between Average Prison Population Size and Average Black to White Ratio",
x = "Average Prison Population Size",
y = "Average Black to White Ratio") +
theme_minimal()
print(chart_2)
chart_1 <- ggplot(sorted_data, aes(x = year, y = black_to_white_ratio, color = state)) +
geom_line() +
labs(title = "Black to White Inmate Population Ratio in Top 10 States Over Time",
x = "Year",
y = "Black to White Ratio",
color = "State") +
theme_minimal()
print(chart_1)
View(average_data)
View(prison)
library(ggplot2)
library(dplyr)
setwd("/Users/meha/Desktop/INFO/info201/code/final-deliverable-p03-mehasingal")
